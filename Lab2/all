---
title: "Regresija įvykių skaičiui"
author: "Vainius Gataveckas, Matas Gaulia, Dovydas Martinkus"
output:
   html_document: default
   word_document: default
---





```r
# Duomenys
# https://www.kaggle.com/datasets/brajeshmohapatra/bike-count-prediction-data-set?select=train.csv

library(tidyverse)
library(AER)
library(MASS)
```



```r
tr <- read.csv("train.csv")
te <- read.csv("test.csv")
te$count <- te$casual + te$registered
full <- rbind(tr, te)

full <- full %>%
  dplyr::select(-c(datetime, casual, registered)) %>%
  mutate(
    season = factor(season),
    holiday = factor(holiday),
    workingday = factor(workingday),
    weather = factor(weather)
  )
```



```r
head(full)
```

```
##   season holiday workingday weather temp  atemp humidity windspeed count
## 1      1       0          0       1 9.84 14.395       81    0.0000    16
## 2      1       0          0       1 9.02 13.635       80    0.0000    40
## 3      1       0          0       1 9.02 13.635       80    0.0000    32
## 4      1       0          0       1 9.84 14.395       75    0.0000    13
## 5      1       0          0       1 9.84 14.395       75    0.0000     1
## 6      1       0          0       2 9.84 12.880       75    6.0032     1
```




```r
# Perdaromi mokymo ir testavimo duomenų rinkiniai
library(rsample)
full_split <- initial_split(full, prop = 0.9)
train <- training(full_split)
test <- testing(full_split)
```



```r
# Siekiant gauti tokius pat rezultatus duomenys nuskaitomi iš failų
train <- read_csv("train_from_R.csv")
  
test <- read_csv("test_from_R.csv")

train <- train %>%
    mutate(
    season = factor(season),
    holiday = factor(holiday),
    workingday = factor(workingday),
    weather = factor(weather)
  )

test <- test %>%
    mutate(
    season = factor(season),
    holiday = factor(holiday),
    workingday = factor(workingday),
    weather = factor(weather)
  )


ggplot(train, aes(x = count)) +
  geom_histogram() +
  theme_minimal()
```

![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5-1.png)

```r
# Dispersija didesnė už vidurkį
mean(train$count)
```

```
## [1] 189.5259
```

```r
var(train$count)
```

```
## [1] 33041.29
```

```r
train %>%
  mutate(q = ntile(count, 6)) %>%
  group_by(q) %>%
  summarize(mean = mean(count), var = var(count))
```

```
## # A tibble: 6 x 3
##       q   mean     var
##   <int>  <dbl>   <dbl>
## 1     1   8.01    23.9
## 2     2  41.4    226. 
## 3     3 105.     433. 
## 4     4 182.     569. 
## 5     5 283.    1383. 
## 6     6 517.   17896.
```



```r
train %>%
  mutate(count = log(count)) %>%
  dplyr::select(c(temp, atemp, windspeed, humidity, count)) %>%
  pivot_longer(-count) %>%
  ggplot(aes(x = value, y = count, colour = name)) +
  geom_point() +
  geom_smooth(se = F, color = "red") +
  facet_wrap(~name, scales = "free") +
  theme_minimal()
```

![plot of chunk unnamed-chunk-6](figure/unnamed-chunk-6-1.png)



```r
# Tarpusavio koreliacijos
library(corrplot)

correlation_matrix <- train %>%
  dplyr::select(where(is.numeric)) %>%
  cor()

corrplot(correlation_matrix, order = "original", method = "color", type = "upper", diag = FALSE, tl.col = "black", addCoef.col = "black")
```

![plot of chunk unnamed-chunk-7](figure/unnamed-chunk-7-1.png)

```r
train <- train %>% dplyr::select(-c(temp))
```


```r
name <- full %>%
  dplyr::select(where(is.factor)) %>%
  names()

group <- function(x) {
  full %>%
    group_by(!!sym(x)) %>%
    summarize(mean = mean(count), var = var(count), n = n())
}

purrr::map(name, group)
```

```
## [[1]]
## # A tibble: 4 x 4
##   season  mean    var     n
##   <fct>  <dbl>  <dbl> <int>
## 1 1       111. 14214.  4242
## 2 2       208. 35480.  4409
## 3 3       236. 39090.  4496
## 4 4       199. 33477.  4232
## 
## [[2]]
## # A tibble: 2 x 4
##   holiday  mean    var     n
##   <fct>   <dbl>  <dbl> <int>
## 1 0        190. 33117. 16879
## 2 1        157. 24573.   500
## 
## [[3]]
## # A tibble: 2 x 4
##   workingday  mean    var     n
##   <fct>      <dbl>  <dbl> <int>
## 1 0           181. 29878.  5514
## 2 1           193. 34265. 11865
## 
## [[4]]
## # A tibble: 4 x 4
##   weather  mean    var     n
##   <fct>   <dbl>  <dbl> <int>
## 1 1       205.  35906. 11413
## 2 2       175.  27368.  4544
## 3 3       112.  17897.  1419
## 4 4        74.3  6072.     3
```



```r
train %>%
  mutate(count = log(count)) %>%
  dplyr::select(c(season, holiday, workingday, weather, count)) %>%
  pivot_longer(-count) %>%
  ggplot(aes(x = value, y = count, group = value)) +
  geom_boxplot() +
  facet_wrap(~name, scales = "free") +
  theme_minimal()
```

![plot of chunk unnamed-chunk-9](figure/unnamed-chunk-9-1.png)




```r
# Puasono modelis
model_1 <- glm(count ~ ., family = "poisson", data = train)
summary(model_1)
```

```
## 
## Call:
## glm(formula = count ~ ., family = "poisson", data = train)
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -27.045   -9.773   -2.978    4.604   41.951  
## 
## Coefficients:
##               Estimate Std. Error  z value Pr(>|z|)    
## (Intercept)  4.632e+00  3.654e-03 1267.467  < 2e-16 ***
## season2      1.328e-01  2.262e-03   58.728  < 2e-16 ***
## season3     -4.911e-02  2.679e-03  -18.334  < 2e-16 ***
## season4      4.414e-01  2.054e-03  214.846  < 2e-16 ***
## holiday1    -1.577e-01  3.941e-03  -40.015  < 2e-16 ***
## workingday1  2.071e-02  1.306e-03   15.851  < 2e-16 ***
## weather2     8.835e-02  1.443e-03   61.239  < 2e-16 ***
## weather3    -1.443e-01  2.920e-03  -49.397  < 2e-16 ***
## weather4     4.250e-01  6.700e-02    6.343 2.25e-10 ***
## atemp        5.002e-02  1.088e-04  459.876  < 2e-16 ***
## humidity    -1.469e-02  3.587e-05 -409.387  < 2e-16 ***
## windspeed    4.697e-03  7.473e-05   62.856  < 2e-16 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## (Dispersion parameter for poisson family taken to be 1)
## 
##     Null deviance: 2613318  on 15640  degrees of freedom
## Residual deviance: 1841637  on 15629  degrees of freedom
## AIC: 1941397
## 
## Number of Fisher Scoring iterations: 5
```

```r
cat("Deviacija padalinta iš laisvės laipsnių: ", model_1$deviance / model_1$df.residual, "\n")
```

```
## Deviacija padalinta iš laisvės laipsnių:  117.8346
```

```r
cat("Siekiama, kad būtų tarp 0.7 ir 1.3")
```

```
## Siekiama, kad būtų tarp 0.7 ir 1.3
```

```r
# Tikrinima hipotezė, kad modelis nėra per didelės dispersijos
dispersiontest(model_1, trafo = 2)
```

```
## 
## 	Overdispersion test
## 
## data:  model_1
## z = 48.27, p-value < 2.2e-16
## alternative hypothesis: true alpha is greater than 0
## sample estimates:
##     alpha 
## 0.5170519
```


```r
# Neigiamas binominis modelis
model_2 <- glm.nb(count  ~ ., data = train)
summary(model_2)
```

```
## 
## Call:
## glm.nb(formula = count ~ ., data = train, init.theta = 1.040185616, 
##     link = log)
## 
## Deviance Residuals: 
##     Min       1Q   Median       3Q      Max  
## -2.9339  -0.9709  -0.2397   0.3391   3.7780  
## 
## Coefficients:
##               Estimate Std. Error z value Pr(>|z|)    
## (Intercept)  4.4686035  0.0468317  95.418  < 2e-16 ***
## season2      0.0455002  0.0278162   1.636 0.101893    
## season3     -0.1434476  0.0345786  -4.148 3.35e-05 ***
## season4      0.3857379  0.0246422  15.654  < 2e-16 ***
## holiday1    -0.1715446  0.0487682  -3.518 0.000436 ***
## workingday1  0.1246960  0.0175575   7.102 1.23e-12 ***
## weather2     0.1534465  0.0191817   8.000 1.25e-15 ***
## weather3    -0.1028759  0.0321478  -3.200 0.001374 ** 
## weather4     0.4365006  0.5710131   0.764 0.444610    
## atemp        0.0573349  0.0014552  39.401  < 2e-16 ***
## humidity    -0.0155757  0.0004864 -32.024  < 2e-16 ***
## windspeed    0.0049135  0.0010284   4.778 1.77e-06 ***
## ---
## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
## 
## (Dispersion parameter for Negative Binomial(1.0402) family taken to be 1)
## 
##     Null deviance: 22610  on 15640  degrees of freedom
## Residual deviance: 17905  on 15629  degrees of freedom
## AIC: 190911
## 
## Number of Fisher Scoring iterations: 1
## 
## 
##               Theta:  1.0402 
##           Std. Err.:  0.0107 
## 
##  2 x log-likelihood:  -190884.7460
```

```r
cat("Deviacija padalinta iš laisvės laipsnių: ", model_2$deviance / model_2$df.residual, "\n")
```

```
## Deviacija padalinta iš laisvės laipsnių:  1.145606
```



```r
plot(cooks.distance(model_2))
```

![plot of chunk unnamed-chunk-12](figure/unnamed-chunk-12-1.png)

```r
tibble(fitted = model_2$fitted.values,resid = resid(model_2, "pearson")) %>%
  ggplot(aes(fitted, resid)) +
  geom_point(alpha = 0.1) +
  geom_smooth(se = F)
```

![plot of chunk unnamed-chunk-12](figure/unnamed-chunk-12-2.png)




```r
# Stepwise selection
model_2_step <- stepAIC(model_2)
```

```
## Start:  AIC=190908.8
## count ~ season + holiday + workingday + weather + atemp + humidity + 
##     windspeed
## 
##              Df    AIC
## <none>          190909
## - holiday     1 190919
## - windspeed   1 190929
## - workingday  1 190956
## - weather     3 190999
## - season      3 191441
## - humidity    1 191856
## - atemp       1 192358
```

```r
# Gaunamas lygiai toks pat modelis
anova(model_2, model_2_step)
```

```
## Likelihood ratio tests of Negative Binomial Models
## 
## Response: count
##                                                                    Model    theta Resid. df    2 x log-lik.   Test
## 1 season + holiday + workingday + weather + atemp + humidity + windspeed 1.040186     15629       -190884.7       
## 2 season + holiday + workingday + weather + atemp + humidity + windspeed 1.040186     15629       -190884.7 1 vs 2
##      df LR stat. Pr(Chi)
## 1                       
## 2     0        0       1
```



```r
# Modelio koeficientų reikšmės
est <- cbind(Estimate = exp(coef(model_2)), exp(confint(model_2)))
est
```

```
##               Estimate      2.5 %     97.5 %
## (Intercept) 87.2348184 79.3294093 95.9587086
## season2      1.0465512  0.9915980  1.1045502
## season3      0.8663662  0.8115691  0.9248297
## season4      1.4706992  1.4027031  1.5419918
## holiday1     0.8423627  0.7665167  0.9279735
## workingday1  1.1328040  1.0943799  1.1723924
## weather2     1.1658454  1.1221531  1.2114287
## weather3     0.9022390  0.8472709  0.9614368
## weather4     1.5472832  0.5988639  6.0551070
## atemp        1.0590104  1.0559769  1.0620496
## humidity     0.9845450  0.9835758  0.9855142
## windspeed    1.0049256  1.0028557  1.0070032
```



```r
library(effects)
plot(predictorEffects(model_2))
```

![plot of chunk unnamed-chunk-15](figure/unnamed-chunk-15-1.png)



```r
# Modelio panaudojimas prognozėms naudojant testavimo duomenų aibę
test_with_pred <- test %>% mutate(count = count, pred = predict(model_2_step, test, type = "response"))

test_with_pred %>%
  dplyr::select(c(count, pred)) %>%
  pivot_longer(everything()) %>%
  ggplot(aes(x = value, fill = name)) +
  geom_histogram() +
  theme_minimal() +
  facet_wrap(vars(name))
```

![plot of chunk unnamed-chunk-16](figure/unnamed-chunk-16-1.png)



```r
library(yardstick)

rmse(test_with_pred, count, pred)
```

```
## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   <chr>   <chr>          <dbl>
## 1 rmse    standard        154.
```

```r
mae(test_with_pred, count, pred)
```

```
## # A tibble: 1 x 3
##   .metric .estimator .estimate
##   <chr>   <chr>          <dbl>
## 1 mae     standard        113.
```






```r
# # Zero-truncated modelis kaip alternatyva
# library(VGAM)
# ztrunc <- vglm(count ~ ., family = posnegbinomial(), data = train)
# 
# summary(ztrunc)
```


```r
# # Modelio prognozės
# test_with_pred <- test %>% mutate(pred = predict(ztrunc, test, type = "response")[, 1])
# 
# test_with_pred %>%
#   dplyr::select(c(count, pred)) %>%
#   pivot_longer(everything()) %>%
#   ggplot(aes(x = value, fill = name)) +
#   geom_histogram() +
#   theme_minimal() +
#   facet_wrap(vars(name))
```




```r
# rmse(test_with_pred, count, pred)
# mae(test_with_pred, count, pred)
```
